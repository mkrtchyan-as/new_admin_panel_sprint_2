version: '3.8'

services:
  theatre-db:
    image: postgres:latest
    env_file:
      - ./.env
    volumes:
      - theatre-db-data:/var/lib/postgresql/data
      - ./database_dump.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  migrate:
    build: .
    entrypoint: ["/bin/sh", "-c", "python manage.py migrate "]
    depends_on:
      theatre-db:
        condition: service_healthy
    env_file:
      - ./.env
    networks:
      - app-network

  django:
    build: .
    command: uwsgi --ini /opt/app/uwsgi.ini
    volumes:
      - static_volume:/opt/app/static
      - media_volume:/opt/app/media
    env_file:
      - ./.env
    depends_on:
      migrate:
        condition: service_completed_successfully
    networks:
      - app-network

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./site.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/opt/app/static
      - media_volume:/opt/app/media
    depends_on:
      django:
        condition: service_started
    ports:
      - "80:80"
    networks:
      - app-network


  swagger:
    image: swaggerapi/swagger-ui:latest
    volumes:
      - ./openapi.yaml:/usr/share/nginx/html/api/openapi.yaml:ro
    environment:
      SWAGGER_JSON: /usr/share/nginx/html/api/openapi.yaml
    networks:
      - app-network

volumes:
  theatre-db-data:
  static_volume:
  media_volume:

networks:
  app-network:
    driver: bridge
